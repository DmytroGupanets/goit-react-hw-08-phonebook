{"version":3,"sources":["components/registerForm/RegisterForm.module.css","components/loginForm/LoginForm.module.css","redux/auth/authOperations.js","components/header/Header.module.css","components/contactForm/ContactForm.module.css","components/contactsList/contactsListItem/ContactsListItem.module.css","components/authNav/AuthNav.module.css","redux/filter/filterActions.js","components/userNavMenu/UserNavMenu.module.css","redux/auth/authActions.js","components/homePageSection/HomePageSection.module.css","components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","redux/contacts/contactsSelector.js","components/contactForm/ContactForm.js","redux/contacts/contactsOperations.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","components/filter/Filter.js","pages/PhonebookPage.js","components/homePageSection/HomePageSection.js","pages/HomePage.js","redux/contacts/contactsActions.js","components/loginForm/LoginForm.js","pages/LoginPage.js","components/registerForm/RegisterForm.js","pages/RegisterPage.js","redux/auth/authSelector.js","routes/mainRoutes.js","components/authNav/AuthNav.js","components/userNavMenu/UserNavMenu.js","components/header/Header.js","components/privateRoute/PrivateRoute.js","components/publicRoute.js/PublicRoute.js","components/main/Main.js","components/App.js","redux/auth/authReducer.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","registerUser","userData","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","loginUser","loginRequest","loginSuccess","loginError","logoutUser","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","updateFilterValue","createAction","getCurrentUserError","getContacts","state","contacts","items","getFilterValue","filter","getLoaderCondition","isLoading","getFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","includes","ContactForm","number","onHandleChange","e","target","value","setState","onFormSubmit","preventDefault","isSameContactName","props","findIndex","isSameContactPhone","alert","addContactOperation","this","fetchContactsOperation","className","styles","form","onSubmit","label","type","pattern","title","required","onChange","addContactBtn","Component","connect","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","then","res","length","fetchContactsSuccess","fetchContactsError","removeContactOperation","id","removeContactRequest","delete","removeContactSuccess","removeContactError","contactsItem","contactName","contactsNumber","contactsButton","onClick","withRouter","filteredContacts","contactsList","map","filterContiner","PhonebookPage","ContactsList","HomePageSection","main_page__logo","main_page__text","HomePage","LoginPage","email","password","login__section","login__title","login__form","login__label","htmlFor","login__input","login__button","LoginForm","RegisterForm","repeatedPassword","newUser","registration__section","registration__title","registration__form","registration__label","registration__input","registration__button","RegisterPage","getIsAuthenticated","isAuthenticated","getUsername","user","mainRoutes","register","path","component","exact","redirectTo","login","AuthNav","header__link","activeClassName","header__link_active","to","username","nav_user","nav_user__name","nav_user__button","header","header__nav","logo__link","logo__link_active","user__wrapper","routeProps","render","restricted","lazy","Main","fallback","App","createReducer","_","payload","setError","error","authReducer","combineReducers","contactsItemReducer","el","loader","contactsFilterReducer","rootReducer","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","reduxStore","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.489b685c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration__section\":\"RegisterForm_registration__section__1dEMR\",\"registration__title\":\"RegisterForm_registration__title__1aDbi\",\"registration__form\":\"RegisterForm_registration__form__2sRQL\",\"registration__label\":\"RegisterForm_registration__label__3l2iV\",\"registration__input\":\"RegisterForm_registration__input__1rIkD\",\"registration__button\":\"RegisterForm_registration__button__3Wzzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__section\":\"LoginForm_login__section__3P_DA\",\"login__title\":\"LoginForm_login__title__3fL-K\",\"login__form\":\"LoginForm_login__form__2j5u8\",\"login__label\":\"LoginForm_login__label__1Xpx3\",\"login__input\":\"LoginForm_login__input__1O8bq\",\"login__button\":\"LoginForm_login__button__18t6m\"};","import axios from \"axios\";\r\nimport {\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const registerUser = (userData) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const loginUser = (userData) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2bJlH\",\"header__nav\":\"Header_header__nav__1fxAl\",\"logo__link\":\"Header_logo__link__1uEe1\",\"user__wrapper\":\"Header_user__wrapper__29RIU\",\"logo__link_active\":\"Header_logo__link_active__1uM33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3S6yc\",\"label\":\"ContactForm_label__3cFa-\",\"addContactBtn\":\"ContactForm_addContactBtn__3qj5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsListItem_contactsItem__fO_ZX\",\"contactName\":\"ContactsListItem_contactName__1vNY9\",\"contactsNumber\":\"ContactsListItem_contactsNumber__1VhvP\",\"contactsButton\":\"ContactsListItem_contactsButton__YdWJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__link\":\"AuthNav_header__link__2-cfZ\",\"header__link_active\":\"AuthNav_header__link_active___ocUY\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFilterValue = createAction(\"updateFilterValue\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_user\":\"UserNavMenu_nav_user__Q55pD\",\"nav_user__name\":\"UserNavMenu_nav_user__name__20oWI\",\"nav_user__button\":\"UserNavMenu_nav_user__button__Ycr7h\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nexport const logoutError = createAction(\"auth/logoutError\");\r\n\r\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentRequest\");\r\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentSuccess\");\r\nexport const getCurrentUserError = createAction(\"auth/getCurrentError\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_page__logo\":\"HomePageSection_main_page__logo__h7Tvf\",\"main_page__text\":\"HomePageSection_main_page__text__2JPQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContiner\":\"Filter_filterContiner__1mpKU\",\"label\":\"Filter_label__35cYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1VHY2\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getLoaderCondition = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilterValue],\r\n  (contacts, filterValue) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelector\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const isSameContactName = this.props.contacts.findIndex(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const isSameContactPhone = this.props.contacts.findIndex(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (isSameContactName !== -1) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    } else if (isSameContactPhone !== -1) {\r\n      return alert(`Phone number ${this.state.number} is already in contacts`);\r\n    }\r\n\r\n    this.props.addContactOperation(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n})(ContactForm);\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const fetchContactsOperation = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    let response = await axios.get(\"/contacts\").then((res) => res.data);\r\n\r\n    if (response.length) dispatch(fetchContactsSuccess());\r\n    dispatch(fetchContactsSuccess(response));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (contact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const response = await axios.post(\"/contacts\", contact);\r\n\r\n    dispatch(addContactSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeContactOperation = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContactOperation } from \"../../../redux/contacts/contactsOperations\";\r\nimport styles from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, id, removeContactOperation }) => {\r\n  const removeItem = () => {\r\n    removeContactOperation(id);\r\n  };\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactName}>\r\n        {name}:<span className={styles.contactsNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={removeItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { removeContactOperation })(ContactsListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport {\r\n  getFilteredContacts,\r\n  getFilterValue,\r\n  getLoaderCondition,\r\n} from \"../../redux/contacts/contactsSelector\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ContactList = ({ isLoading, filteredContacts }) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <ul className={styles.contactsList}>\r\n          {filteredContacts.map((contact) => (\r\n            <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filteredContacts: getFilteredContacts(state),\r\n  filterValue: getFilterValue(state),\r\n  isLoading: getLoaderCondition(state),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(ContactList));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilterValue } from \"../../redux/filter/filterActions\";\r\nimport { getFilterValue } from \"../../redux/contacts/contactsSelector\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ updateFilterValue, filterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    updateFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filterContiner}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: getFilterValue(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateFilterValue })(Filter);\r\n","import ContactForm from \"../components/contactForm/ContactForm\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport Filter from \"../components/filter/Filter\";\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n","import styles from \"./HomePageSection.module.css\";\r\n\r\nconst HomePageSection = () => {\r\n  return (\r\n    <section>\r\n      <h1 className={styles.main_page__logo}>MyPhonebook</h1>\r\n      <p className={styles.main_page__text}>\r\n        Welcome! Please, login or register new account to continue.\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomePageSection;\r\n","import HomePageSection from \"../components/homePageSection/HomePageSection\";\r\n\r\nconst HomePage = () => {\r\n  return <HomePageSection />;\r\n};\r\n\r\nexport default HomePage;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSucces\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\nexport const removeContactRequest = createAction(\r\n  \"contacts/removeContacRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\"contacts/removeContacSucces\");\r\nexport const removeContactError = createAction(\"contacts/removeContacError\");\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../redux/auth/authOperations\";\r\nimport styles from \"./LoginForm.module.css\";\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.loginUser(this.state);\r\n\r\n    this.setState({ name: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.login__section}>\r\n        <h1 className={styles.login__title}>Login</h1>\r\n        <form className={styles.login__form} onSubmit={this.onFormSubmit}>\r\n          <label className={styles.login__label} htmlFor=\"email\">\r\n            E-mail:\r\n          </label>\r\n          <input\r\n            className={styles.login__input}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n\r\n          <label className={styles.login__label} htmlFor=\"password\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            className={styles.login__input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n\r\n          <button className={styles.login__button} type=\"submit\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { loginUser })(LoginPage);\r\n","import LoginForm from \"../components/loginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n  return <LoginForm />;\r\n};\r\nexport default LoginPage;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../redux/auth/authOperations\";\r\nimport styles from \"./RegisterForm.module.css\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatedPassword: \"\",\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, password, repeatedPassword } = this.state;\r\n\r\n    if (password !== repeatedPassword) {\r\n      alert(\"Passwords is not matching!\");\r\n      return;\r\n    }\r\n\r\n    const newUser = { name, email, password };\r\n\r\n    this.props.registerUser(newUser);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatedPassword: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.registration__section}>\r\n        <h1 className={styles.registration__title}>Registration</h1>\r\n        <form\r\n          className={styles.registration__form}\r\n          onSubmit={this.onFormSubmit}\r\n        >\r\n          <label className={styles.registration__label} htmlFor=\"name\">\r\n            Username:\r\n          </label>\r\n          <input\r\n            className={styles.registration__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Username может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <label className={styles.registration__label} htmlFor=\"email\">\r\n            E-mail:\r\n          </label>\r\n          <input\r\n            className={styles.registration__input}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <label className={styles.registration__label} htmlFor=\"password\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            className={styles.registration__input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <label\r\n            className={styles.registration__label}\r\n            htmlFor=\"repeatedPassword\"\r\n          >\r\n            Repeat your password:\r\n          </label>\r\n\r\n          <input\r\n            className={styles.registration__input}\r\n            type=\"password\"\r\n            name=\"repeatedPassword\"\r\n            value={this.state.repeatedPassword}\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <button className={styles.registration__button} type=\"submit\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { registerUser })(RegisterForm);\r\n","import RegisterForm from \"../components/registerForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n  return <RegisterForm />;\r\n};\r\n\r\nexport default RegisterPage;\r\n","export const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const getUsername = (state) => state.auth.user.name;\r\n","import HomePage from \"../pages/HomePage\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport PhonebookPage from \"../pages/PhonebookPage\";\r\nimport RegisterPage from \"../pages/RegisterPage\";\r\n\r\nexport const mainRoutes = {\r\n  authentication: {\r\n    register: {\r\n      name: \"Register\",\r\n      path: \"/register\",\r\n      component: RegisterPage,\r\n      exact: false,\r\n      redirectTo: \"/contacts\",\r\n    },\r\n    login: {\r\n      name: \"Login\",\r\n      path: \"/login\",\r\n      component: LoginPage,\r\n      exact: false,\r\n      redirectTo: \"/contacts\",\r\n    },\r\n  },\r\n  homepage: {\r\n    name: \"Homepage\",\r\n    path: \"/\",\r\n    component: HomePage,\r\n    exact: true,\r\n  },\r\n  phonebook: {\r\n    name: \"Phonebook\",\r\n    path: \"/contacts\",\r\n    component: PhonebookPage,\r\n    exact: false,\r\n    redirectTo: \"/\",\r\n  },\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        className={styles.header__link}\r\n        activeClassName={styles.header__link_active}\r\n        to={mainRoutes.authentication.register.path}\r\n      >\r\n        {mainRoutes.authentication.register.name}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className={styles.header__link}\r\n        activeClassName={styles.header__link_active}\r\n        to={mainRoutes.authentication.login.path}\r\n      >\r\n        {mainRoutes.authentication.login.name}\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/auth/authOperations\";\r\nimport { getUsername } from \"../../redux/auth/authSelector\";\r\nimport styles from \"./UserNavMenu.module.css\";\r\n\r\nconst UserNavMenu = ({ username, logoutUser }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.nav_user}>\r\n        Welcome, <span className={styles.nav_user__name}>{username}</span>\r\n      </p>\r\n      <button\r\n        className={styles.nav_user__button}\r\n        type=\"button\"\r\n        onClick={logoutUser}\r\n      >\r\n        Logout\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: getUsername(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(UserNavMenu);\r\n","import { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelector\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\nimport AuthNav from \"../authNav/AuthNav\";\r\nimport UserNavMenu from \"../userNavMenu/UserNavMenu\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <nav className={styles.header__nav}>\r\n        <NavLink\r\n          className={styles.logo__link}\r\n          activeClassName={styles.logo__link_active}\r\n          to={mainRoutes.phonebook.path}\r\n        >\r\n          {mainRoutes.phonebook.name}\r\n        </NavLink>\r\n\r\n        <div className={styles.user__wrapper}>\r\n          {isAuthenticated ? <UserNavMenu /> : <AuthNav />}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelector\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelector\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { Switch } from \"react-router-dom\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport PrivateRoute from \"../privateRoute/PrivateRoute\";\r\nimport PublicRoute from \"../publicRoute.js/PublicRoute\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\n\r\nconst HomePage = lazy(() => import(\"../../pages/HomePage\"));\r\nconst PhonebookPage = lazy(() => import(\"../../pages/PhonebookPage\"));\r\nconst RegisterPage = lazy(() => import(\"../../pages/RegisterPage\"));\r\nconst LoginPage = lazy(() => import(\"../../pages/LoginPage\"));\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Switch>\r\n          <PublicRoute\r\n            path={mainRoutes.homepage.path}\r\n            component={HomePage}\r\n            exact={mainRoutes.homepage.exact}\r\n          />\r\n          <PrivateRoute\r\n            path={mainRoutes.phonebook.path}\r\n            component={PhonebookPage}\r\n            redirectTo={mainRoutes.phonebook.redirectTo}\r\n            exact={mainRoutes.phonebook.exact}\r\n          />\r\n\r\n          <PublicRoute\r\n            path={mainRoutes.authentication.register.path}\r\n            component={RegisterPage}\r\n            exact={mainRoutes.authentication.register.exact}\r\n            restricted\r\n            redirectTo={mainRoutes.authentication.register.redirectTo}\r\n          />\r\n          <PublicRoute\r\n            path={mainRoutes.authentication.login.path}\r\n            component={LoginPage}\r\n            exact={mainRoutes.authentication.login.exact}\r\n            restricted\r\n            redirectTo={mainRoutes.authentication.register.redirectTo}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/goit-react-hw-08-phonebook\"\r\n            redirectTo=\"/\"\r\n            restricted\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../redux/auth/authOperations\";\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Main />\n      </>\n    );\n  }\n}\n\nexport default connect(null, { getCurrentUser })(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\nconst user = createReducer(\r\n  { name: \"\", email: \"\" },\r\n  {\r\n    [registerSuccess]: (_, { payload }) => payload.user,\r\n    [loginSuccess]: (_, { payload }) => payload.user,\r\n    [logoutSuccess]: () => {},\r\n    [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  }\r\n);\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: (_, { payload }) => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(\"\", {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginSuccess]: () => true,\r\n  [loginError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nexport const error = createReducer(\"\", {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [removeContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loader = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { updateFilterValue } from \"./filterActions\";\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [updateFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default contactsFilterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { contactsItemReducer, loader } from \"./contacts/contactsReducer\";\r\nimport contactsFilterReducer from \"./filter/filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsItemReducer,\r\n  filter: contactsFilterReducer,\r\n  isLoading: loader,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { authReducer } from \"./auth/authReducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: rootReducer,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst reduxStore = { store, persistor };\r\n\r\nexport default reduxStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reduxStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore.store}>\n      <PersistGate loading={null} persistor={reduxStore.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}