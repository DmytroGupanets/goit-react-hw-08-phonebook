{"version":3,"sources":["redux/contacts/contactsActions.js","components/header/Header.module.css","components/authNav/AuthNav.module.css","redux/auth/authOperations.js","components/userNavMenu/UserNavMenu.module.css","redux/auth/authActions.js","redux/filter/filterActions.js","redux/auth/authSelector.js","components/authNav/AuthNav.js","components/userNavMenu/UserNavMenu.js","components/header/Header.js","routes/mainRoutes.js","routes/PublicRoute.js","routes/PrivateRoute.js","components/main/Main.js","components/App.js","redux/auth/authReducer.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","registerUser","userData","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","loginUser","loginRequest","loginSuccess","loginError","logoutUser","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","updateFilterValue","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","AuthNav","className","styles","header__link","activeClassName","header__link_active","to","connect","username","nav_user","nav_user__name","nav_user__button","type","onClick","header","header__nav","logo__link","logo__link_active","user__wrapper","mainRoutes","path","component","lazy","exact","isPrivate","restricted","redirectTo","Component","key","routeProps","render","props","Main","fallback","map","route","redirect","App","this","createReducer","email","_","payload","setError","error","authReducer","combineReducers","contactsItemReducer","filter","el","id","loader","contactsFilterReducer","rootReducer","items","isLoading","authPersistConfig","storage","whitelist","store","configureStore","reducer","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","reduxStore","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.647e06f7.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSucces\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\nexport const removeContactRequest = createAction(\r\n  \"contacts/removeContacRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\"contacts/removeContacSucces\");\r\nexport const removeContactError = createAction(\"contacts/removeContacError\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2bJlH\",\"header__nav\":\"Header_header__nav__1fxAl\",\"logo__link\":\"Header_logo__link__1uEe1\",\"user__wrapper\":\"Header_user__wrapper__29RIU\",\"logo__link_active\":\"Header_logo__link_active__1uM33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__link\":\"AuthNav_header__link__2-cfZ\",\"header__link_active\":\"AuthNav_header__link_active___ocUY\"};","import axios from \"axios\";\r\nimport {\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const registerUser = (userData) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const loginUser = (userData) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_user\":\"UserNavMenu_nav_user__Q55pD\",\"nav_user__name\":\"UserNavMenu_nav_user__name__20oWI\",\"nav_user__button\":\"UserNavMenu_nav_user__button__Ycr7h\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nexport const logoutError = createAction(\"auth/logoutError\");\r\n\r\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentRequest\");\r\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentSuccess\");\r\nexport const getCurrentUserError = createAction(\"auth/getCurrentError\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFilterValue = createAction(\"updateFilterValue\");\r\n","export const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const getUsername = (state) => state.auth.user.name;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        className={styles.header__link}\r\n        activeClassName={styles.header__link_active}\r\n        to=\"/register\"\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.header__link}\r\n        activeClassName={styles.header__link_active}\r\n        to=\"/login\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/auth/authOperations\";\r\nimport { getUsername } from \"../../redux/auth/authSelector\";\r\nimport styles from \"./UserNavMenu.module.css\";\r\n\r\nconst UserNavMenu = ({ username, logoutUser }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.nav_user}>\r\n        Welcome, <span className={styles.nav_user__name}>{username}</span>\r\n      </p>\r\n      <button\r\n        className={styles.nav_user__button}\r\n        type=\"button\"\r\n        onClick={logoutUser}\r\n      >\r\n        Logout\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: getUsername(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(UserNavMenu);\r\n","import { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/authSelector\";\r\nimport AuthNav from \"../authNav/AuthNav\";\r\nimport UserNavMenu from \"../userNavMenu/UserNavMenu\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <nav className={styles.header__nav}>\r\n        <NavLink\r\n          className={styles.logo__link}\r\n          activeClassName={styles.logo__link_active}\r\n          to=\"/contacts\"\r\n        >\r\n          My contacts\r\n        </NavLink>\r\n\r\n        <div className={styles.user__wrapper}>\r\n          {isAuthenticated ? <UserNavMenu /> : <AuthNav />}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: \"Homepage\",\r\n    path: \"/\",\r\n    component: lazy(() =>\r\n      import(\"../pages/HomePage\" /* webpackChunkName: 'HomePage' */)\r\n    ),\r\n    exact: true,\r\n    isPrivate: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    name: \"Phonebook\",\r\n    path: \"/contacts\",\r\n    component: lazy(() =>\r\n      import(\"../pages/PhonebookPage\" /* webpackChunkName: 'PhonebookPage' */)\r\n    ),\r\n    exact: false,\r\n    redirectTo: \"/\",\r\n    isPrivate: true,\r\n    restricted: true,\r\n  },\r\n\r\n  {\r\n    name: \"Register\",\r\n    path: \"/register\",\r\n    component: lazy(() =>\r\n      import(\"../pages/RegisterPage\" /* webpackChunkName: 'RegisterPage' */)\r\n    ),\r\n    exact: false,\r\n    redirectTo: \"/contacts\",\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    name: \"Login\",\r\n    path: \"/login\",\r\n    component: lazy(() =>\r\n      import(\"../pages/LoginPage\" /* webpackChunkName: 'LoginPage' */)\r\n    ),\r\n    exact: false,\r\n    redirectTo: \"/contacts\",\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/authSelector\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  key,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} key={key} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../redux/auth/authSelector\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  key,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} key={key} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Switch } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport { mainRoutes } from \"../../routes/mainRoutes\";\r\nimport PublicRoute from \"../../routes/PublicRoute\";\r\nimport PrivateRoute from \"../../routes/PrivateRoute\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <Suspense fallback={<h2>Loading...</h2>}>\r\n        <Switch>\r\n          {mainRoutes.map((route) =>\r\n            route.isPrivate ? (\r\n              <PrivateRoute {...route} key={route.path} />\r\n            ) : (\r\n              <PublicRoute {...route} key={route.path} />\r\n            )\r\n          )}\r\n\r\n          <PrivateRoute\r\n            path=\"/goit-react-hw-08-phonebook\"\r\n            redirect=\"/\"\r\n            restricted\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser } from \"../redux/auth/authOperations\";\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Main />\n      </>\n    );\n  }\n}\n\nexport default connect(null, { getCurrentUser })(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\nconst user = createReducer(\r\n  { name: \"\", email: \"\" },\r\n  {\r\n    [registerSuccess]: (_, { payload }) => payload.user,\r\n    [loginSuccess]: (_, { payload }) => payload.user,\r\n    [logoutSuccess]: () => {},\r\n    [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  }\r\n);\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: (_, { payload }) => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(\"\", {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginSuccess]: () => true,\r\n  [loginError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nexport const authReducer = combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const contactsItemReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nexport const error = createReducer(\"\", {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [removeContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loader = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { updateFilterValue } from \"./filterActions\";\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [updateFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default contactsFilterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { contactsItemReducer, loader } from \"./contacts/contactsReducer\";\r\nimport contactsFilterReducer from \"./filter/filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsItemReducer,\r\n  filter: contactsFilterReducer,\r\n  isLoading: loader,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { authReducer } from \"./auth/authReducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: rootReducer,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst reduxStore = { store, persistor };\r\n\r\nexport default reduxStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reduxStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore.store}>\n      <PersistGate loading={null} persistor={reduxStore.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}