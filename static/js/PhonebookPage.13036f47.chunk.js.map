{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactsList/contactsListItem/ContactsListItem.module.css","components/contactsList/ContactsList.module.css","components/filter/Filter.module.css","redux/contacts/contactsSelector.js","components/contactForm/ContactForm.js","redux/contacts/contactsOperations.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","components/filter/Filter.js","pages/PhonebookPage.js"],"names":["module","exports","getContacts","state","contacts","items","getFilterValue","filter","getLoaderCondition","isLoading","getFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","includes","ContactForm","number","onHandleChange","e","target","value","setState","onFormSubmit","preventDefault","isSameContactName","props","findIndex","isSameContactPhone","alert","addContactOperation","this","fetchContactsOperation","className","styles","form","onSubmit","label","type","pattern","title","required","onChange","addContactBtn","Component","connect","dispatch","a","addContactRequest","axios","post","response","addContactSuccess","data","addContactError","message","fetchContactsRequest","get","then","res","length","fetchContactsSuccess","fetchContactsError","removeContactOperation","id","removeContactRequest","delete","removeContactSuccess","removeContactError","contactsItem","contactName","contactsNumber","contactsButton","onClick","withRouter","filteredContacts","contactsList","map","updateFilterValue","filterContiner","PhonebookPage","ContactsList"],"mappings":"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","file":"static/js/PhonebookPage.13036f47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3S6yc\",\"label\":\"ContactForm_label__3cFa-\",\"addContactBtn\":\"ContactForm_addContactBtn__3qj5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsListItem_contactsItem__fO_ZX\",\"contactName\":\"ContactsListItem_contactName__1vNY9\",\"contactsNumber\":\"ContactsListItem_contactsNumber__1VhvP\",\"contactsButton\":\"ContactsListItem_contactsButton__YdWJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1VHY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContiner\":\"Filter_filterContiner__1mpKU\",\"label\":\"Filter_label__35cYH\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getLoaderCondition = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilterValue],\r\n  (contacts, filterValue) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelector\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const isSameContactName = this.props.contacts.findIndex(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const isSameContactPhone = this.props.contacts.findIndex(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (isSameContactName !== -1) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    } else if (isSameContactPhone !== -1) {\r\n      return alert(`Phone number ${this.state.number} is already in contacts`);\r\n    }\r\n\r\n    this.props.addContactOperation(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  fetchContactsOperation,\r\n})(ContactForm);\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const fetchContactsOperation = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    let response = await axios.get(\"/contacts\").then((res) => res.data);\r\n\r\n    if (response.length) dispatch(fetchContactsSuccess());\r\n    dispatch(fetchContactsSuccess(response));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (contact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const response = await axios.post(\"/contacts\", contact);\r\n\r\n    dispatch(addContactSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const removeContactOperation = (id) => async (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactError(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContactOperation } from \"../../../redux/contacts/contactsOperations\";\r\nimport styles from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, id, removeContactOperation }) => {\r\n  const removeItem = () => {\r\n    removeContactOperation(id);\r\n  };\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactName}>\r\n        {name}:<span className={styles.contactsNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={removeItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { removeContactOperation })(ContactsListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport {\r\n  getFilteredContacts,\r\n  getFilterValue,\r\n  getLoaderCondition,\r\n} from \"../../redux/contacts/contactsSelector\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ContactList = ({ isLoading, filteredContacts }) => {\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <ul className={styles.contactsList}>\r\n          {filteredContacts.map((contact) => (\r\n            <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filteredContacts: getFilteredContacts(state),\r\n  filterValue: getFilterValue(state),\r\n  isLoading: getLoaderCondition(state),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(ContactList));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilterValue } from \"../../redux/filter/filterActions\";\r\nimport { getFilterValue } from \"../../redux/contacts/contactsSelector\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ updateFilterValue, filterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    updateFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filterContiner}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: getFilterValue(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateFilterValue })(Filter);\r\n","import ContactForm from \"../components/contactForm/ContactForm\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport Filter from \"../components/filter/Filter\";\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"sourceRoot":""}